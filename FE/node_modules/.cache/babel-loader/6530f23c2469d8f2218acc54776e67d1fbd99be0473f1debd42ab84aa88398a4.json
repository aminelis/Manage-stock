{"ast":null,"code":"var _jsxFileName = \"/home/amine/product-list/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport { MDBBtn, MDBContainer, MDBInput, MDBCheckbox } from 'mdb-react-ui-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false); // État local pour stocker la valeur de \"Remember me\"\n\n  useEffect(() => {\n    // Récupérer la valeur de \"Remember me\" du localStorage lors du chargement du composant\n    const rememberMeValue = localStorage.getItem('rememberMe');\n    if (rememberMeValue) {\n      setRememberMe(JSON.parse(rememberMeValue));\n    }\n  }, []);\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('https://localhost:7013/api/Auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Login successful');\n        if (rememberMe) {\n          // Si \"Remember me\" est vrai, enregistrez-le dans le localStorage\n          localStorage.setItem('rememberMe', JSON.stringify(true));\n        } else {\n          // Sinon, supprimez-le du localStorage\n          localStorage.removeItem('rememberMe');\n        }\n        navigate('/productList');\n      } else {\n        console.error('Authentication failed');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n  const handleRememberMeChange = () => {\n    // Fonction pour mettre à jour l'état de \"Remember me\"\n    setRememberMe(!rememberMe); // Inverser la valeur actuelle de \"Remember me\"\n  };\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    className: \"p-3 my-5 d-flex flex-column w-50\",\n    children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n      wrapperClass: \"mb-4\",\n      label: \"Username\",\n      id: \"form1\",\n      type: \"text\",\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n      wrapperClass: \"mb-4\",\n      label: \"Password\",\n      id: \"form2\",\n      type: \"password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between mx-3 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(MDBCheckbox, {\n        name: \"flexCheck\",\n        value: \"\",\n        id: \"flexCheckDefault\",\n        label: \"Remember me\",\n        checked: rememberMe // L'état de la case à cocher est basé sur la valeur de \"Remember me\"\n        ,\n        onChange: handleRememberMeChange // Appel de la fonction lors du changement d'état de la case à cocher\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"!#\",\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n      className: \"mb-4\",\n      onClick: handleLogin,\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Not a member? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Registration\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"ShguluOkWGiumP+dxvocv1gfIMw=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Link","MDBBtn","MDBContainer","MDBInput","MDBCheckbox","jsxDEV","_jsxDEV","Home","_s","navigate","username","setUsername","password","setPassword","rememberMe","setRememberMe","rememberMeValue","localStorage","getItem","JSON","parse","handleLogin","response","fetch","method","headers","body","stringify","ok","data","json","console","log","setItem","removeItem","error","handleRememberMeChange","className","children","wrapperClass","label","id","type","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","name","checked","href","onClick","to","_c","$RefreshReg$"],"sources":["/home/amine/product-list/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { Link } from 'react-router-dom';\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBInput,\n  MDBCheckbox,\n} from 'mdb-react-ui-kit';\n\nfunction Home() {\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [rememberMe, setRememberMe] = useState(false); // État local pour stocker la valeur de \"Remember me\"\n\n  useEffect(() => {\n    // Récupérer la valeur de \"Remember me\" du localStorage lors du chargement du composant\n    const rememberMeValue = localStorage.getItem('rememberMe');\n    if (rememberMeValue) {\n      setRememberMe(JSON.parse(rememberMeValue));\n    }\n  }, []);\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('https://localhost:7013/api/Auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Login successful');\n        if (rememberMe) {\n          // Si \"Remember me\" est vrai, enregistrez-le dans le localStorage\n          localStorage.setItem('rememberMe', JSON.stringify(true));\n        } else {\n          // Sinon, supprimez-le du localStorage\n          localStorage.removeItem('rememberMe');\n        }\n        navigate('/productList');\n      } else {\n        console.error('Authentication failed');\n      }\n    } catch (error) {\n      console.error('Error logging in:', error);\n    }\n  };\n\n  const handleRememberMeChange = () => {\n    // Fonction pour mettre à jour l'état de \"Remember me\"\n    setRememberMe(!rememberMe); // Inverser la valeur actuelle de \"Remember me\"\n  };\n\n  return (\n    <MDBContainer className=\"p-3 my-5 d-flex flex-column w-50\">\n      <MDBInput\n        wrapperClass=\"mb-4\"\n        label=\"Username\"\n        id=\"form1\"\n        type=\"text\"\n        onChange={(e) => setUsername(e.target.value)}\n      />\n      <MDBInput\n        wrapperClass=\"mb-4\"\n        label=\"Password\"\n        id=\"form2\"\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <div className=\"d-flex justify-content-between mx-3 mb-4\">\n        <MDBCheckbox\n          name=\"flexCheck\"\n          value=\"\"\n          id=\"flexCheckDefault\"\n          label=\"Remember me\"\n          checked={rememberMe} // L'état de la case à cocher est basé sur la valeur de \"Remember me\"\n          onChange={handleRememberMeChange} // Appel de la fonction lors du changement d'état de la case à cocher\n        />\n        <a href=\"!#\">Forgot password?</a>\n      </div>\n      <MDBBtn className=\"mb-4\" onClick={handleLogin}>\n        Sign in\n      </MDBBtn>\n      <div className=\"text-center\">\n        <p>\n          Not a member? <Link to=\"/Registration\">Register</Link>\n        </p>\n      </div>\n    </MDBContainer>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}